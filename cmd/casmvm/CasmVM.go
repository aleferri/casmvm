package main

import (
	"bufio"
	"flag"
	"fmt"
	"os"
	"strings"

	"github.com/aleferri/casmvm/pkg/asm"
	"github.com/aleferri/casmvm/pkg/opcodes"
	"github.com/aleferri/casmvm/pkg/vm"
	"github.com/aleferri/casmvm/pkg/vmio"
)

func neg(a int64) (int64, error) { return -a, nil }

//ParseLineByLine provided source file and return the vm for the program
func ParseLineByLine(sourceFile string, debugMode bool) (*vm.NaiveVM, error) {
	var programfile, programErr = os.Open(sourceFile)
	if programErr != nil {
		wnd, _ := os.Getwd()
		return nil, fmt.Errorf("Error during opening of file %s from %s\n", sourceFile, wnd)
	}

	programCode := bufio.NewReader(programfile)

	keepGoing := true

	listings := []opcodes.Opcode{}

	for keepGoing {
		line, err := programCode.ReadString('\n')
		line = strings.TrimSpace(line)
		if line != "" && line[0] != ';' {
			opcode, parseError := asm.ParseOpcode(line, debugMode)
			listings = append(listings, opcode)
			if parseError != nil {
				return nil, parseError
			}
		}
		keepGoing = err == nil
	}

	callable := vm.MakeCallable()
	callable.Set(listings)

	return vm.MakeVerboseNaiveVM([]vm.Callable{callable}, vmio.MakeVMLoggerConsole(vmio.ALL), vm.MakeVMFrame()), nil
}

func main() {
	var debugMode bool
	flag.BoolVar(&debugMode, "debug", false, "-debug=true|false")
	flag.Parse()

	fileFound := false

	for _, f := range flag.Args() {
		if !strings.HasPrefix(f, "-") {
			fileFound = true

			vm, errAsm := ParseLineByLine(f, debugMode)

			if errAsm != nil {
				fmt.Println(errAsm.Error())
				break
			}

			results, execErr := vm.Enter(0)

			if execErr != nil {
				fmt.Println(execErr.Error(), execErr.OpcodeID())
				break
			}

			if results.Returns().IsEmpty() {
				fmt.Println("No result")
			} else {
				fmt.Println(vm.Frame().Returns())
			}
		} else if f == "--help" {
			fmt.Println("Usage: casmvm -debug=false|true filename.csm")
			fmt.Println(
				"Specified program will be parsed and executed on the fly, the last element of the stack after the computation will be printed in the console",
			)
			fmt.Println()
			fmt.Println("This program exists to debug dumps generated by casmeleon and to be used as a library by casmeleon v2")
		}
	}

	if !fileFound {
		fmt.Println("Usage: casmvm -debug=false|true filename.csm")
	}
}
